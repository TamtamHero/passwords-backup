{"version":3,"sources":["controller/PasswordsManager.js","logo.svg","components/LoadButton/index.js","components/DownloadButton/index.js","App.js","reportWebVitals.js","index.js"],"names":["DUMP_METADATAS_COMMAND","LOAD_METADATAS_COMMAND","PasswordsManager","metadatas_size_on_device","this","allowedStatuses","connected","metadatas","Buffer","alloc","busy","TransportWebUSB","create","transport","getVersion","version","getAppName","appName","toString","Error","close","disconnect","result","length","readUInt16BE","errors","error","request","args","response","dump_metadatas","_toBytes","load_metadatas","send","isSuccess","mapProtocolError","slice","json_metadatas","parsed_metadatas","JSON","parse","offset","forEach","element","nickname","charsets","write","metadatas_list","erased_list","corruptions","len","erased","push","chunk","is_last","from","concat","_toJSON","i","_load_metadatas_chunk","LoadButton","text","color","onClick","useState","isLoading","setLoading","fileData","setFileData","file","useRef","useEffect","then","onTriggerFileSelect","useCallback","current","click","onSelectedFileChanged","event","target","files","value","className","disabled","style","id","type","ref","onChange","accept","DownloadButton","console","log","blob","Blob","stringify","url","URL","createObjectURL","elem","document","createElement","href","download","body","appendChild","removeChild","downloadFile","ask_device","device_handler","Promise","resolve","a","connect","toast","info","autoClose","dispatchRequest","dismiss","success","App","passwordsManager","hideProgressBar","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mQAKaA,G,MAAyB,GACzBC,EAAyB,EAEhCC,E,WACF,aAA8C,IAAlCC,EAAiC,uDAAN,KAAM,oBACzCC,KAAKC,gBAAkB,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OACxED,KAAKE,WAAY,EACjBF,KAAKD,yBAA2BA,EAChCC,KAAKG,UAAY,IAAIC,EAAOC,MAAMN,GAClCC,KAAKM,MAAO,E,yKAIPN,KAAKE,U,iCACiBK,IAAgBC,S,cAAvCR,KAAKS,U,yBAEoBT,KAAKU,a,cAA1BV,KAAKW,Q,iBACeX,KAAKY,a,WACE,eADvBC,E,QACQC,W,uBAAkC,IAAIC,MAAMF,G,QACxDb,KAAKE,WAAY,E,mEAGXF,KAAKS,UAAUO,Q,cACrBhB,KAAKiB,a,qJAKPC,GACN,OAAOA,EAAOC,QAAU,GAAgD,QAA3CD,EAAOE,aAAaF,EAAOC,OAAS,K,mCAIjEnB,KAAKE,WAAY,I,uCAGJgB,GACb,GAAIA,EAAOC,OAAS,EAAG,MAAM,IAAIJ,MAAM,gCAEvC,IAAIM,EAAS,CACT,MAAQ,mBACR,MAAQ,gBACR,MAAQ,uBACR,MAAQ,uBACR,MAAQ,uBACR,MAAQ,uBAGRC,EAAQJ,EAAOE,aAAaF,EAAOC,OAAS,GAChD,GAAIG,KAASD,EACT,MAAM,IAAIN,MAAMM,EAAOC,M,+EAITC,EAASC,G,2EACvBxB,KAAKM,K,sBACC,IAAIS,MAAM,kB,OAEpBf,KAAKM,MAAO,E,cAIAiB,E,OAhEe,I,OACC,I,eAwEf3B,E,UAIAC,E,mCAXgBG,KAAKU,a,cAAtBe,E,qDAIiBzB,KAAKY,a,eAAtBa,E,qDAIiBzB,KAAK0B,iB,eAAtBD,E,2CAIAzB,KAAK2B,SAASH,G,UACRxB,KAAK4B,iB,kDAIL,IAAIb,MAAM,uB,yBAIxBf,KAAKM,MAAO,E,8CAETmB,G,0RAIYzB,KAAKS,UAAUoB,KAAK,IA7FZ,EA6FuC,EAAM,EAAMzB,EAAO,GAAIJ,KAAKC,iB,cAA1FiB,E,OACClB,KAAK8B,UAAUZ,IAASlB,KAAK+B,iBAAiBb,G,kBAC5CA,EAAOc,MAAM,EAAGd,EAAOC,OAAS,I,yQAIpBnB,KAAKS,UAAUoB,KAAK,IAlGX,EAkGuC,EAAM,EAAMzB,EAAO,GAAIJ,KAAKC,iB,cAA3FiB,E,OACClB,KAAK8B,UAAUZ,IAASlB,KAAK+B,iBAAiBb,G,kBAC5CA,EAAOc,MAAM,EAAGd,EAAOC,OAAS,I,qIAGlCc,GACL,IAAI9B,EAAYH,KAAKG,UACjB+B,EAAmBC,KAAKC,MAAMH,GAAX,OACnBI,EAAS,EACbH,EAAiBI,SAAQ,SAAAC,GACrB,IAAIC,EAAWD,EAAO,SAClBE,EAAWF,EAAO,SACtB,GAAIC,EAASrB,OAAS,GAAI,MAAM,IAAIJ,MAAJ,sCAAyCyB,EAAzC,uBAAgEA,EAASrB,SACzGhB,EAAUkC,KAAYG,EAASrB,OAAS,EACxChB,EAAUkC,KAAY,EACtBlC,EAAUkC,KAAYI,EACtBtC,EAAUuC,MAAMF,EAAUH,GAC1BA,GAAUG,EAASrB,Y,gCAWvB,IALA,IAAIhB,EAAYH,KAAKG,UACjBwC,EAAiB,GACjBC,EAAc,GACdP,EAAS,EACTQ,EAAc,KACL,CACT,IAAIC,EAAM3C,EAAUkC,GACpB,GAAY,IAARS,EAAW,MACf,IAAIC,EAAmC,MAA1B5C,EAAUkC,EAAS,GAC5BI,EAAWtC,EAAUkC,EAAS,GAC9BS,EAAM,KAAQD,GAAe,CAACR,EAAD,4BAA8BS,EAA9B,iBAC5BC,EAODH,EAAYI,KAAK,CACb,SAAY7C,EAAU6B,MAAMK,EAAS,EAAGA,EAAS,EAAIS,GAAKhC,WAC1D,SAAY2B,IARhBE,EAAeK,KAAK,CAChB,SAAY7C,EAAU6B,MAAMK,EAAS,EAAGA,EAAS,EAAIS,GAAKhC,WAC1D,SAAY2B,IASpBJ,GAAUS,EAAM,EAEpB,MAAO,CACH,OAAUH,EACV,kCAAqCC,EACrC,wBAA2BC,EAC3B,cAAiB1C,EAAUW,SAAS,U,qFAIhBmC,EAAOC,G,uFACZlD,KAAKS,UAAUoB,KAAK,IAAMhC,EAAwBqD,EAAU,IAAO,EAAM,EAAM9C,EAAO+C,KAAKF,GAAQjD,KAAKC,iB,cAAvHiB,E,OACClB,KAAK8B,UAAUZ,IAASlB,KAAK+B,iBAAiBb,G,kBAC5CA,G,gQAIPlB,KAAKG,UAAYC,EAAOC,MAAM,G,YACvBL,KAAKG,UAAUgB,OAASnB,KAAKD,0B,iCACbC,KAAKS,UAAUoB,KAAK,IAAMjC,EAAwB,EAAM,EAAMQ,EAAO,GAAIJ,KAAKC,iB,UAA7FiB,E,OACClB,KAAK8B,UAAUZ,IAASlB,KAAK+B,iBAAiBb,GACnDlB,KAAKG,UAAYC,EAAOgD,OAAO,CAACpD,KAAKG,UAAWC,EAAO+C,KAAKjC,EAAOc,MAAM,GAAI,QAC3D,MAAdd,EAAO,IAAelB,KAAKG,UAAUgB,OAASnB,KAAKD,0B,sBAC7C,IAAIgB,MAAJ,UAAaf,KAAKD,yBAAlB,qCAAuEC,KAAKG,UAAUgB,OAAtF,qB,uDAGPnB,KAAKqD,W,mQAIkB,IAA1BrD,KAAKG,UAAUgB,O,sBACT,IAAIJ,MAAM,mB,OAEXuC,EAAI,E,YAAGA,EAAItD,KAAKG,UAAUgB,Q,wBAC3B8B,EAAQjD,KAAKG,UAAU6B,MAAMsB,EAAGA,EAAI,K,SAClCtD,KAAKuD,sBAAsBN,EAAOK,EAAIL,EAAM9B,SAAWnB,KAAKG,UAAUgB,Q,OAFrCmC,GAAK,I,6HAQzCxD,Q,8NC7LA,MAA0B,iC,cCgD1B0D,MA7Cf,YAA+C,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAAW,EACVC,oBAAS,GADC,mBACnCC,EADmC,KACxBC,EADwB,OAEVF,qBAFU,mBAEnCG,EAFmC,KAEzBC,EAFyB,KAGpCC,EAAOC,iBAAO,MAEpBC,qBAAU,WACFN,GACAF,EAAQI,GAAUK,MAAK,WACnBN,GAAW,QAGpB,CAACD,EAAWE,EAAUJ,IAEzB,IAAMU,EAAsBC,uBAAY,WACpCL,EAAKM,SAAWN,EAAKM,QAAQC,UAC9B,IAEGC,EAAwBH,uBAAY,SAACI,GACvCA,EAAMC,OAAOC,MAAM,GAAGnB,OAAOW,MAAK,SAACX,GAC/BiB,EAAMC,OAAOE,MAAQ,GACrBb,EAAYP,GACZK,GAAW,QAEhB,IAEH,OACI,yBACIgB,UAAU,aACVC,SAAUlB,EACVF,QAASE,EAAY,KAAOQ,EAC5BW,MAAO,CAAE,OAAU,OAAQ,gBAAmBtB,GAJlD,UAMKG,EAAY,gBAAaJ,EAC1B,uBACIwB,GAAE,uBAAkBxB,GACpByB,KAAK,OACLC,IAAKlB,EACLmB,SAAUX,EACVY,OAAO,QACPL,MAAO,CAAE,QAAW,c,MCCrBM,MA7Bf,YAAmD,IAAzB7B,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAAW,EACdC,oBAAS,GADK,mBACvCC,EADuC,KAC5BC,EAD4B,KAiB9C,OAdAK,qBAAU,WACFN,GACAF,IAAUS,MAAK,SAACL,GACZwB,QAAQC,IAAIzB,GACRA,GAlBpB,SAAsBA,GAClB,IAAI0B,EAAO,IAAIC,KAAK,CAACvD,KAAKwD,UAAU5B,EAAU,KAAM,IAAK,CAAEmB,KAAM,mCAC7DU,EAAMC,IAAIC,gBAAgBL,GAC1BM,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAON,EACZG,EAAKI,SAAW,cAChBH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKvB,QACLwB,SAASI,KAAKE,YAAYP,GAUAQ,CAAaxC,GAC3BD,GAAW,QAGpB,CAACD,EAAWF,IAOX,wBACImB,UAAU,iBACVC,SAAUlB,EACVF,QAASE,EAAY,KART,WAChBC,GAAW,IAQPkB,MAAO,CAAE,OAAU,OAAQ,gBAAmBtB,GAJlD,SAMKG,EAAY,gBAAaJ,K,2BC9BtC,SAAS+C,EAAWC,EAAgBlF,GAAqB,IAAZC,EAAW,uDAAJ,GAClD,OAAO,IAAIkF,QAAJ,uCAAY,WAAOC,GAAP,eAAAC,EAAA,yDACb1F,EAAS,KADI,SAGVuF,EAAevG,UAHL,gCAIPuG,EAAeI,UAJR,cAMfC,IAAMC,KAAK,uCAAmC,CAAEC,WAAW,IAN5C,SAOAP,EAAeQ,gBAAgB1F,EAASC,GAPxC,OAOfN,EAPe,OASf4F,IAAMI,UACNJ,IAAMK,QAAQ,kBAVC,kDAafV,EAAexF,aACf6F,IAAMI,UACNJ,IAAMxF,MAAN,UAAe,KAAMR,WAArB,kBAfe,yBAkBf6F,EAAQzF,GAlBO,6EAAZ,uDA0CMkG,MAnBf,WACE,IAAMC,EAAmB,IAAIvH,IAC7B,OACE,sBAAKgF,UAAU,MAAf,UACE,cAAC,IAAD,CAAgBwC,iBAAiB,IACjC,yBAAQxC,UAAU,aAAlB,UACE,qBAAKyC,IAAKC,EAAM1C,UAAU,WAAW2C,IAAI,SACzC,sBAAK3C,UAAU,WAAf,UACE,cAAC,EAAD,CAAgBrB,KAAK,SAASC,MAAM,UAAUC,QAAS,kBAAM6C,EAAWa,EAAkBzH,QAC1F,cAAC,EAAD,CAAY6D,KAAK,UAAUC,MAAM,UAAUC,QAAS,SAACxD,GAAD,OAAeqG,EAAWa,EAAkBxH,IAAwBM,SAE1H,wIC/BOuH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxD,MAAK,YAAkD,IAA/CyD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASqC,eAAe,SAM1BX,M","file":"static/js/main.075d1fc7.chunk.js","sourcesContent":["import TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\nimport { listen } from \"@ledgerhq/logs\";\n\nexport const GET_VERSION_COMMAND = 0x03;\nexport const GET_APP_NAME_COMMAND = 0x04;\nexport const DUMP_METADATAS_COMMAND = 0x05;\nexport const LOAD_METADATAS_COMMAND = 0x06;\n\nclass PasswordsManager {\n    constructor(metadatas_size_on_device = 4096) {\n        this.allowedStatuses = [0x9000, 0x6985, 0x6A86, 0x6A87, 0x6D00, 0x6E00, 0xB000];\n        this.connected = false;\n        this.metadatas_size_on_device = metadatas_size_on_device;\n        this.metadatas = new Buffer.alloc(metadatas_size_on_device);\n        this.busy = false\n    }\n\n    async connect() {\n        if (!this.connected) {\n            this.transport = await TransportWebUSB.create();\n            try {\n                this.version = await this.getVersion();\n                let appName = await this.getAppName();\n                if (appName.toString() !== \"Passwords\") throw new Error(appName);\n                this.connected = true;\n            }\n            catch (error) {\n                await this.transport.close();\n                this.disconnect();\n                throw error;\n            }\n        }\n    }\n    isSuccess(result) {\n        return result.length >= 2 && result.readUInt16BE(result.length - 2) === 0x9000;\n    }\n\n    disconnect() {\n        this.connected = false;\n    }\n\n    mapProtocolError(result) {\n        if (result.length < 2) throw new Error(\"Response length is too small\");\n\n        var errors = {\n            0x6985: \"Action cancelled\",\n            0x6A86: \"SW_WRONG_P1P2\",\n            0x6A87: \"SW_WRONG_DATA_LENGTH\",\n            0x6D00: \"SW_INS_NOT_SUPPORTED\",\n            0x6E00: \"SW_CLA_NOT_SUPPORTED\",\n            0xB000: \"SW_APPNAME_TOO_LONG\"\n        }\n\n        let error = result.readUInt16BE(result.length - 2);\n        if (error in errors) {\n            throw new Error(errors[error]);\n        }\n    }\n\n    async dispatchRequest(request, args) {\n        if (this.busy) {\n            throw new Error(\"Device is busy\");\n        }\n        this.busy = true;\n\n        let response;\n        try {\n            switch (request) {\n                case GET_VERSION_COMMAND:\n                    response = await this.getVersion();\n                    break;\n\n                case GET_APP_NAME_COMMAND:\n                    response = await this.getAppName();\n                    break;\n\n                case DUMP_METADATAS_COMMAND:\n                    response = await this.dump_metadatas();\n                    break;\n\n                case LOAD_METADATAS_COMMAND:\n                    this._toBytes(args);\n                    await this.load_metadatas();\n                    break;\n\n                default:\n                    throw new Error(\"Unknown instruction\");\n            }\n        }\n        finally {\n            this.busy = false;\n        }\n        return response;\n    }\n\n    async getVersion() {\n        let result = await this.transport.send(0xE0, GET_VERSION_COMMAND, 0x00, 0x00, Buffer(0), this.allowedStatuses);\n        if (!this.isSuccess(result)) this.mapProtocolError(result);\n        return result.slice(0, result.length - 2);\n    }\n\n    async getAppName() {\n        let result = await this.transport.send(0xE0, GET_APP_NAME_COMMAND, 0x00, 0x00, Buffer(0), this.allowedStatuses);\n        if (!this.isSuccess(result)) this.mapProtocolError(result);\n        return result.slice(0, result.length - 2);\n    }\n\n    _toBytes(json_metadatas) {\n        let metadatas = this.metadatas;\n        let parsed_metadatas = JSON.parse(json_metadatas)[\"parsed\"];\n        let offset = 0;\n        parsed_metadatas.forEach(element => {\n            let nickname = element[\"nickname\"];\n            let charsets = element[\"charsets\"];\n            if (nickname.length > 19) throw new Error(`Nickname too long (19 max): ${nickname} has length ${nickname.length}`);\n            metadatas[offset++] = nickname.length + 1;\n            metadatas[offset++] = 0x00;\n            metadatas[offset++] = charsets;\n            metadatas.write(nickname, offset);\n            offset += nickname.length;\n        });\n    }\n\n    _toJSON() {\n\n        let metadatas = this.metadatas;\n        let metadatas_list = [];\n        let erased_list = [];\n        let offset = 0;\n        let corruptions = [];\n        while (true) {\n            let len = metadatas[offset];\n            if (len === 0) break;\n            let erased = metadatas[offset + 1] === 0xFF ? true : false;\n            let charsets = metadatas[offset + 2];\n            if (len > 19 + 1) corruptions += [offset, `nickname too long ${len}, max is 19`]\n            if (!erased) {\n                metadatas_list.push({\n                    \"nickname\": metadatas.slice(offset + 3, offset + 2 + len).toString(),\n                    \"charsets\": charsets\n                });\n            }\n            else {\n                erased_list.push({\n                    \"nickname\": metadatas.slice(offset + 3, offset + 2 + len).toString(),\n                    \"charsets\": charsets\n                });\n            }\n            offset += len + 2;\n        }\n        return {\n            \"parsed\": metadatas_list,\n            \"nicknames_erased_but_still_stored\": erased_list,\n            \"corruptions_encountered\": corruptions,\n            \"raw_metadatas\": metadatas.toString(\"hex\")\n        };\n    }\n\n    async _load_metadatas_chunk(chunk, is_last) {\n        let result = await this.transport.send(0xE0, LOAD_METADATAS_COMMAND, is_last ? 0xFF : 0x00, 0x00, Buffer.from(chunk), this.allowedStatuses);\n        if (!this.isSuccess(result)) this.mapProtocolError(result);\n        return result;\n    }\n\n    async dump_metadatas() {\n        this.metadatas = Buffer.alloc(0)\n        while (this.metadatas.length < this.metadatas_size_on_device) {\n            let result = await this.transport.send(0xE0, DUMP_METADATAS_COMMAND, 0x00, 0x00, Buffer(0), this.allowedStatuses);\n            if (!this.isSuccess(result)) this.mapProtocolError(result);\n            this.metadatas = Buffer.concat([this.metadatas, Buffer.from(result.slice(1, -2))]);\n            if (result[0] === 0xFF && this.metadatas.length < this.metadatas_size_on_device) {\n                throw new Error(`${this.metadatas_size_on_device} bytes requested but only ${this.metadatas.length} bytes available`);\n            }\n        }\n        return this._toJSON();\n    }\n\n    async load_metadatas() {\n        if (this.metadatas.length === 0) {\n            throw new Error(\"No data to load\");\n        }\n        for (let i = 0; i < this.metadatas.length; i += 0xFF) {\n            let chunk = this.metadatas.slice(i, i + 0xFF);\n            await this._load_metadatas_chunk(chunk, i + chunk.length === this.metadatas.length ? true : false)\n        }\n    }\n\n}\n\nexport default PasswordsManager","export default __webpack_public_path__ + \"static/media/logo.468afbe1.svg\";","import React, { useEffect, useRef, useCallback, useState } from \"react\";\nimport './index.css';\n\nfunction LoadButton({ text, color, onClick }) {\n    const [isLoading, setLoading] = useState(false);\n    const [fileData, setFileData] = useState();\n    const file = useRef(null);\n\n    useEffect(() => {\n        if (isLoading) {\n            onClick(fileData).then(() => {\n                setLoading(false);\n            });\n        }\n    }, [isLoading, fileData, onClick]);\n\n    const onTriggerFileSelect = useCallback(() => {\n        file.current && file.current.click();\n    }, []);\n\n    const onSelectedFileChanged = useCallback((event) => {\n        event.target.files[0].text().then((text) => {\n            event.target.value = '';\n            setFileData(text);\n            setLoading(true);\n        });\n    }, []);\n\n    return (\n        <button\n            className=\"LoadButton\"\n            disabled={isLoading}\n            onClick={isLoading ? null : onTriggerFileSelect}\n            style={{ \"margin\": \"10px\", \"backgroundColor\": color }}\n        >\n            {isLoading ? 'Loading…' : text}\n            <input\n                id={`selectedFile_${text}`}\n                type=\"file\"\n                ref={file}\n                onChange={onSelectedFileChanged}\n                accept=\".json\"\n                style={{ \"display\": \"none\" }}\n            />\n        </button>\n    );\n}\n\nexport default LoadButton","import React, { useEffect, useState } from \"react\";\nimport './index.css';\n\nfunction downloadFile(fileData) {\n    var blob = new Blob([JSON.stringify(fileData, null, 4)], { type: \"application/json;charset=utf-8\" });\n    var url = URL.createObjectURL(blob);\n    var elem = document.createElement(\"a\");\n    elem.href = url;\n    elem.download = \"backup.json\";\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n}\n\nfunction DownloadButton({ text, color, onClick }) {\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (isLoading) {\n            onClick().then((fileData) => {\n                console.log(fileData);\n                if (fileData) downloadFile(fileData);\n                setLoading(false);\n            });\n        }\n    }, [isLoading, onClick]);\n\n    const handleClick = () => {\n        setLoading(true);\n    }\n\n    return (\n        <button\n            className=\"DownloadButton\"\n            disabled={isLoading}\n            onClick={isLoading ? null : handleClick}\n            style={{ \"margin\": \"10px\", \"backgroundColor\": color }}\n        >\n            {isLoading ? 'Loading…' : text}\n        </button>\n    );\n}\n\nexport default DownloadButton","import logo from './logo.svg';\nimport LoadButton from './components/LoadButton';\nimport DownloadButton from './components/DownloadButton';\nimport PasswordsManager, { DUMP_METADATAS_COMMAND, LOAD_METADATAS_COMMAND } from \"./controller/PasswordsManager.js\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nfunction ask_device(device_handler, request, args = {}) {\n  return new Promise(async (resolve) => {\n    let result = null;\n    try {\n      if (!device_handler.connected) {\n        await device_handler.connect();\n      }\n      toast.info(\"Approve action on your device ✨\", { autoClose: false });\n      result = await device_handler.dispatchRequest(request, args);\n\n      toast.dismiss();\n      toast.success(\"Success ✅\");\n    }\n    catch (error) {\n      device_handler.disconnect()\n      toast.dismiss();\n      toast.error(`${error.toString()} 🙅`);\n    }\n    finally {\n      resolve(result);\n    }\n  });\n}\n\nfunction App() {\n  const passwordsManager = new PasswordsManager()\n  return (\n    <div className=\"App\">\n      <ToastContainer hideProgressBar={true} />\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"Commands\">\n          <DownloadButton text=\"Backup\" color=\"#41ccb4\" onClick={() => ask_device(passwordsManager, DUMP_METADATAS_COMMAND)} />\n          <LoadButton text=\"Restore\" color=\"#FFB86D\" onClick={(metadatas) => ask_device(passwordsManager, LOAD_METADATAS_COMMAND, metadatas)} />\n        </div>\n        <p>\n          Here is a little blob to explain how to use this website to backup and restore you password app.\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}